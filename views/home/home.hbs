<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quản lý âm nhạc</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css">
    <!-- Thêm CSS để hiển thị danh sách bài hát -->
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        .img-music{
          border-radius: 30px;
          width: 100px;
          height: 100px;
        }

        .navbar-brand {
            padding: 5px;
            border-radius: 10px;
            font-weight: bold;
            font-size: 30px;
            border: 1px solid beige;
        }

        .navbar-brand:hover {
            color: red;
            font-weight: bold;
            font-size: 30px;
            border: 1px solid beige;
        }

        .navbar {
            height: 82px;
            background-color: #1e88e5;
        }

        #searchButton {
            background-color: greenyellow;
        }

        /* Thêm kiểu cho phần tử hiển thị danh sách bài hát */
        #songList {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-around;
            margin-top: 20px;
        }

        .songItem {
            text-align: center;
            margin-bottom: 20px;
        }
        /* Thêm kiểu cho thanh điều khiển */
        #controls {
            display: flex;
            align-items: center;
            justify-content: center;
            margin-top: 20px;
        }

        .control-btn {
            margin: 0 10px;
            cursor: pointer;
        }

        #volume {
            width: 100px;
            margin: 0 10px;
        }

        #speed {
            width: 100px;
            margin: 0 10px;
        }
        .btn-next-play{
            width: 100px;
            border: 0px;
            border-radius: 20px;
            background-color: #1e88e5;
            color: white;
        }
        .songItem{
            margin: 10px;
            border: 1px solid ;
            border-radius: 50px;
             padding: 20px;
            height: 250px;
            width: 250px;
        }
        .songItem:hover{
            padding: 20px;
            background-color: antiquewhite;
            height: 250px;
            width: 250px;
        }
        .txt-title{
            font-weight: bold;
        }
        .pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 20px;
}

.pagination-button {
  padding: 8px 12px;
  margin: 0 4px;
  border: 1px solid #ccc;
  background-color: #fff;
  color: #333;
  cursor: pointer;
  transition: background-color 0.3s, color 0.3s;
}

.pagination-button:hover {
  background-color: #333;
  color: #fff;
}

.pagination-button.active {
  background-color: #333;
  color: #fff;
}

.pagination-button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}
    </style>
</head>

<body>
    <nav class="navbar navbar-expand-lg bg-body-tertiary">
        <div class="container-fluid">
            <a class="navbar-brand" href="./music">Trang Chủ</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
                aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <div class="container-fluid">
                    <form style="width: 300px; position: absolute; right: 10px; top: 20px;" class="d-flex" role="search">
                        <input class="form-control me-2" type="search" id="searchInput" placeholder="Tìm kiếm bài hát"
                            aria-label="Search">
                        <button id="searchButton" class="btn btn-outline-success" type="button">Search</button>
                    </form>
                </div>
            </div>
        </div>
    </nav>

    <!-- Giao diện hiển thị danh sách bài hát đang phát -->
    <div id="nowPlaying">
        <h2><span id="currentSongTitle"></span></h2>
    </div>

    <!-- Thêm phần tử để hiển thị danh sách bài hát -->
    <div id="songList"></div>

 <ul class="pagination" id="pagination"></ul>

    <!-- Thêm thư viện Howler.js -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/howler/2.2.3/howler.js"></script>


    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js"></script>
    <!-- Firebase JavaScript SDK -->
    <script src="https://www.gstatic.com/firebasejs/8.8.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.8.0/firebase-database.js"></script>
  <script>
  const firebaseConfig = {
    apiKey: "AIzaSyCZgZP878mOAM2ec-hz1WFwORxSw_J6d2k",
    authDomain: "soundbox-du-an-md31.firebaseapp.com",
    databaseURL: "https://soundbox-du-an-md31-default-rtdb.firebaseio.com",
    projectId: "soundbox-du-an-md31",
    storageBucket: "soundbox-du-an-md31.appspot.com",
    messagingSenderId: "265264289877",
    appId: "1:265264289877:web:0f88e2fa54c638685e9cdc",
    measurementId: "G-FE9Z9NKJDR"
  };
  firebase.initializeApp(firebaseConfig);
  const database = firebase.database();
  const songsRef = database.ref("songs");

  const songsPerPage = 8; // Số bài hát hiển thị trên mỗi trang
  let currentPage = 1; // Trang hiện tại

  function displaySongs(startIndex, endIndex, songs) {
    const songListElement = document.getElementById('songList');
    songListElement.innerHTML = ''; // Xóa danh sách bài hát hiện tại

    for (let i = startIndex; i <= endIndex; i++) {
      const songId = Object.keys(songs)[i];
      const song = songs[songId];

      // Tạo một phần tử cho mỗi bài hát và hiển thị
      const songItem = document.createElement('div');
      songItem.classList.add('songItem');
      songItem.innerHTML = `
        <img class="img-music" src="${song.image}" alt="${song.title}">
        <div class="txt-title">${song.title}</div>
        <p>${song.artist}</p>
        <button class="btn-next-play" onclick="playSong('${songId}')">Nghe</button>
      `;
      songListElement.appendChild(songItem);
    }
  }

  // Hiển thị danh sách bài hát ban đầu
  songsRef.once('value').then(snapshot => {
    const songs = snapshot.val();
    const totalSongs = Object.keys(songs).length;
    const totalPages = Math.ceil(totalSongs / songsPerPage);

    displaySongs(0, songsPerPage - 1, songs); // Hiển thị bài hát từ vị trí 0 đến songsPerPage - 1

    // Tạo nút phân trang
    const paginationElement = document.getElementById('pagination');
    for (let i = 1; i <= totalPages; i++) {
      const pageButton = document.createElement('button');
      pageButton.textContent = i;
      pageButton.classList.add('pagination-button');
      if (i === currentPage) {
        pageButton.classList.add('active');
      }
      pageButton.addEventListener('click', () => {
        currentPage = i;
        const startIndex = (currentPage - 1) * songsPerPage;
        const endIndex = Math.min(currentPage * songsPerPage - 1, totalSongs - 1);
        displaySongs(startIndex, endIndex, songs);

        // Xóa lớp 'active' khỏi các nút phân trang hiện tại và thêm vào nút phân trang mới được chọn
        const activeButton = paginationElement.querySelector('.pagination-button.active');
        activeButton.classList.remove('active');
        pageButton.classList.add('active');
      });
      paginationElement.appendChild(pageButton);
    }
  }).catch(error => {
    console.error('Lỗi khi lấy danh sách bài hát:', error);
  });

  // Lắng nghe sự kiện khi nhấn nút tìm kiếm
const searchButton = document.getElementById('searchButton');
searchButton.addEventListener('click', () => {
  const searchInput = document.getElementById('searchInput');
  const keyword = searchInput.value.trim().toLowerCase();
  // Tìm kiếm bài hát dựa trên từ khóa
  songsRef.once('value').then(snapshot => {
    const songs = snapshot.val();
    const filteredSongs = Object.values(songs).filter(song => {
      const title = song.title.toLowerCase();
      const artist = song.artist.toLowerCase();
      return title.includes(keyword) || artist.includes(keyword);
    });
    displaySongs(0, songsPerPage - 1, filteredSongs);
  }).catch(error => {
    console.error('Lỗi khi tìm kiếm bài hát:', error);
  });
});

  function playSong(songId) {
    // Chuyển hướng sang trang play-music với tham số songId
    window.location.href = `/play-music?songId=${songId}`;
  }
</script>
</body>
</html>
