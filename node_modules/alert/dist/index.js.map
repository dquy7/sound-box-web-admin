{"version":3,"sources":["../src/index.ts","../src/components/toaster.tsx","../src/core/store.ts","../src/components/toast.tsx","#style-inject:#style-inject","../src/core/styles.css","../src/components/assets.tsx","../src/core/toast.ts"],"sourcesContent":["export { Toaster } from './components/toaster';\r\nexport { toast } from './core/toast';\r\n","'use client';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { IToast, ToastState, ToasterProps } from '../core/types';\r\nimport { Store } from '../core/store';\r\nimport { Toast } from './toast';\r\n\r\nconst Toaster = ({ position = 'bottom-right', duration = 3000, style, className }: ToasterProps) => {\r\n  const [toasts, setToasts] = useState<IToast[]>([]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = Store.subscribe((toast) => {\r\n      setToasts((toasts) => [...toasts, toast]);\r\n      handleToast(toast);\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  function handleToast(toast: IToast) {\r\n    setTimeout(() => updateToastState(toast, 'idle'), 300);\r\n    setTimeout(() => updateToastState(toast, 'leave'), duration - 100);\r\n    setTimeout(() => removeToast(toast), duration);\r\n  }\r\n\r\n  function updateToastState(toast: IToast, state: ToastState) {\r\n    setToasts((toasts) => {\r\n      var copy = toasts.slice();\r\n      var index = copy.findIndex((x) => x.id === toast.id);\r\n      copy[index] = { ...copy[index], state: state };\r\n      return copy;\r\n    });\r\n  }\r\n\r\n  const removeToast = useCallback(\r\n    (toast: IToast) => setToasts((toasts) => toasts.filter((x) => x.id !== toast.id)),\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <section\r\n      style={{\r\n        position: 'absolute',\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: 5,\r\n        padding: 20,\r\n        bottom: 0,\r\n        right: 0,\r\n        transform: 'translateY(0)',\r\n        height: 'fit-content',\r\n        transition: 'all 230ms cubic-bezier(.21, 1.02, .73, 1)',\r\n      }}\r\n    >\r\n      {toasts.map((toast, index) => (\r\n        <Toast key={index} toast={toast} />\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport { Toaster };\r\n","import { IToast, ToastType } from './types';\r\n\r\nclass Reducer {\r\n  toasts: Array<IToast>;\r\n  subscribers: Array<(toast: IToast) => void>;\r\n\r\n  constructor() {\r\n    this.toasts = [];\r\n    this.subscribers = [];\r\n  }\r\n\r\n  subscribe(func: (toast: IToast) => void) {\r\n    this.subscribers = [...this.subscribers, func];\r\n    return () => {\r\n      this.subscribers.splice(this.subscribers.indexOf(func), 1);\r\n    };\r\n  }\r\n\r\n  publish(toast: IToast) {\r\n    this.subscribers.forEach((func) => func(toast));\r\n  }\r\n\r\n  add(message: string, type: ToastType) {\r\n    const toast = {\r\n      id: this.toasts.length,\r\n      state: 'enter',\r\n      type: type,\r\n      title: message,\r\n    } as IToast;\r\n\r\n    this.toasts = [...this.toasts, toast];\r\n    this.publish(toast);\r\n  }\r\n}\r\n\r\nexport const Store = new Reducer();\r\n","'use client';\r\nimport React from 'react';\r\nimport { ToastProps } from '../core/types';\r\nimport '../core/styles.css';\r\nimport { SuccessIcon } from './assets';\r\n\r\nconst Toast = ({ toast }: ToastProps) => {\r\n  return (\r\n    <div\r\n      className={`toast-${toast.state}`}\r\n      style={{\r\n        paddingTop: '0.5rem',\r\n        paddingBottom: '0.5rem',\r\n        paddingLeft: '1rem',\r\n        paddingRight: '1rem',\r\n        borderRadius: '0.375rem',\r\n        backgroundColor: 'rgb(243, 244, 246)',\r\n        fontWeight: 500,\r\n        fontSize: '0.875rem',\r\n        lineHeight: '1.25rem',\r\n        color: 'rgb(17, 24, 39)',\r\n        zIndex: toast.id,\r\n        display: 'flex',\r\n        gap: 4,\r\n        minWidth: 220,\r\n      }}\r\n      key={toast.id}\r\n    >\r\n      {toast.type === 'success' && SuccessIcon}\r\n      {toast.title}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Toast };\r\n","\n          export default function styleInject(css, { insertAt } = {}) {\n            if (!css || typeof document === 'undefined') return\n          \n            const head = document.head || document.getElementsByTagName('head')[0]\n            const style = document.createElement('style')\n            style.type = 'text/css'\n          \n            if (insertAt === 'top') {\n              if (head.firstChild) {\n                head.insertBefore(style, head.firstChild)\n              } else {\n                head.appendChild(style)\n              }\n            } else {\n              head.appendChild(style)\n            }\n          \n            if (style.styleSheet) {\n              style.styleSheet.cssText = css\n            } else {\n              style.appendChild(document.createTextNode(css))\n            }\n          }\n          ","import styleInject from '#style-inject';styleInject(\".toast-enter{animation:enterAnimation .35s cubic-bezier(.21,1.02,.73,1) forwards}.toast-leave{animation:leaveAnimation .4s cubic-bezier(.06,.71,.55,1) forwards}@keyframes enterAnimation{0%{transform:translate3d(0,200%,0) scale(.6);opacity:.5}to{transform:translateZ(0) scale(1);opacity:1}}@keyframes leaveAnimation{0%{transform:translateZ(-1px) scale(1);opacity:1}to{transform:translate3d(0,150%,-1px) scale(.6);opacity:0}}\\n\")","import React from 'react';\r\n\r\nconst SuccessIcon = (\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" height=\"20\" width=\"20\">\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z\"\r\n      clipRule=\"evenodd\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport { SuccessIcon };\r\n","'use client';\r\nimport { Store } from './store';\r\n\r\nconst success = (message: string) => {\r\n  Store.add(message, 'success');\r\n};\r\n\r\nconst defaultToast = (message: string) => {\r\n  Store.add(message, 'default');\r\n};\r\n\r\nconst toast = Object.assign(defaultToast, {\r\n  success: success,\r\n});\r\n\r\nexport { toast };\r\n"],"mappings":"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","names":["src_exports","__export","Toaster","toast","__toCommonJS","import_react","Reducer","func","toast","message","type","Store","import_react","styleInject","css","insertAt","head","style","styleInject","import_react","SuccessIcon","React","Toast","toast","React","SuccessIcon","Toaster","position","duration","style","className","toasts","setToasts","unsubscribe","Store","toast","handleToast","updateToastState","removeToast","state","copy","index","x","React","Toast","success","message","Store","defaultToast","toast"]}